{"ast":null,"code":"import Swal from 'sweetalert2';\nimport { FormControl } from '@angular/forms';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { DialogContentComponent } from '../shared/dialog-content/dialog-content.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/material/dialog\";\nconst _c0 = [\"archivoInput\"];\nconst _c1 = [\"spinner\"];\nconst _c2 = [\"subiryprocesarButton\"];\nfunction GraphsComponent_mat_card_content_30_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 17)(1, \"mat-card\")(2, \"mat-expansion-panel\")(3, \"mat-expansion-panel-header\")(4, \"mat-panel-title\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"mat-panel-description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"a\", 18);\n    i0.ɵɵelement(8, \"mat-icon\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"img\", 20);\n    i0.ɵɵlistener(\"click\", function GraphsComponent_mat_card_content_30_div_4_Template_img_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const grafico_r3 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.openImageDialog(\"data:image/png;base64,\" + grafico_r3));\n    });\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const grafico_r3 = ctx.$implicit;\n    const i_r4 = ctx.index;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" Gr\\u00E1fico \", i_r4 + 1, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"download\", \"grafico\", i_r4, \".png\");\n    i0.ɵɵproperty(\"href\", \"data:image/png;base64,\" + grafico_r3, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", \"data:image/png;base64,\" + grafico_r3, i0.ɵɵsanitizeUrl)(\"alt\", \"Gr\\u00E1fico \" + (i_r4 + 1));\n  }\n}\nfunction GraphsComponent_mat_card_content_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-card-content\")(1, \"h4\", 14);\n    i0.ɵɵtext(2, \"Gr\\u00E1ficos generados:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 15);\n    i0.ɵɵtemplate(4, GraphsComponent_mat_card_content_30_div_4_Template, 10, 5, \"div\", 16);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.graficos);\n  }\n}\nfunction GraphsComponent_mat_card_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-card\", 21)(1, \"div\", 22);\n    i0.ɵɵelement(2, \"mat-spinner\", 23);\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class GraphsComponent {\n  ngOnInit() {}\n  constructor(http, dialog) {\n    this.http = http;\n    this.dialog = dialog;\n    this.loading = false;\n    this.archivosSeleccionados = false;\n    this.disableSelect = new FormControl(false);\n  }\n  getData(event) {\n    this.archivos = event.target.files;\n  }\n  openImageDialog(imageSrc) {\n    const imagenSeleccionada = imageSrc;\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = {\n      imageSrc: imagenSeleccionada\n    };\n    dialogConfig.height = '80%';\n    this.dialog.open(DialogContentComponent, dialogConfig);\n  }\n  visualizarAtributos() {\n    this.loading = true;\n    if (this.archivos.length === 0) {\n      this.archivosSeleccionados = false; // No se han seleccionado archivos\n      return;\n    }\n    this.archivosSeleccionados = true; // Se han seleccionado archivos\n    const formData = new FormData();\n    for (let i = 0; i < this.archivos.length; i++) {\n      formData.append('archivo', this.archivos[i]);\n    }\n    this.http.post('http://127.0.0.1:5000/visualizar_atributos', formData).subscribe(response => {\n      this.graficos = response;\n      this.loading = false;\n      Swal.fire({\n        position: 'top-end',\n        icon: 'success',\n        title: 'Se han generado los gráficos',\n        showConfirmButton: false,\n        timer: 2000,\n        backdrop: false\n      });\n    });\n  }\n  analisisDeInformacion() {\n    this.loading = true;\n    if (this.archivos.length === 0) {\n      this.archivosSeleccionados = false; // No se han seleccionado archivos\n      return;\n    }\n    this.archivosSeleccionados = true; // Se han seleccionado archivos\n    const formData = new FormData();\n    for (let i = 0; i < this.archivos.length; i++) {\n      formData.append('archivo', this.archivos[i]);\n    }\n    this.http.post('http://127.0.0.1:5000/analisis_informacion', formData).subscribe(response => {\n      this.graficos = response;\n      this.loading = false;\n      Swal.fire({\n        position: 'top-end',\n        icon: 'success',\n        title: 'Se han generado los gráficos',\n        showConfirmButton: false,\n        timer: 2000,\n        backdrop: false\n      });\n    });\n  }\n  machineLearning() {\n    this.loading = true;\n    if (this.archivos.length === 0) {\n      this.archivosSeleccionados = false; // No se han seleccionado archivos\n      return;\n    }\n    this.archivosSeleccionados = true; // Se han seleccionado archivos\n    const formData = new FormData();\n    for (let i = 0; i < this.archivos.length; i++) {\n      formData.append('archivo', this.archivos[i]);\n    }\n    // Agrega el valor seleccionado en el 'select' al FormData\n    formData.append('algoritmo', this.algorithmValue);\n    this.http.post('http://127.0.0.1:5000/machine_learning', formData).subscribe(response => {\n      this.graficos = response;\n      this.loading = false;\n      Swal.fire({\n        position: 'top-end',\n        icon: 'success',\n        title: 'Se han generado los gráficos',\n        showConfirmButton: false,\n        timer: 2000,\n        backdrop: false\n      });\n    });\n  }\n  changeSelect(event) {\n    this.algorithmValue = event;\n  }\n  static #_ = this.ɵfac = function GraphsComponent_Factory(t) {\n    return new (t || GraphsComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.MatDialog));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GraphsComponent,\n    selectors: [[\"app-graphs\"]],\n    viewQuery: function GraphsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(_c2, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.archivoInput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.spinner = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.subiryprocesarButton = _t.first);\n      }\n    },\n    decls: 32,\n    vars: 3,\n    consts: [[1, \"mb-3\"], [\"type\", \"file\", \"name\", \"archivo\", \"id\", \"archivo\", \"multiple\", \"\", 1, \"form-control\", 3, \"change\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 1, \"me-4\", 3, \"click\"], [1, \"me-2\"], [\"placeholder\", \"--Algoritmo--\", \"id\", \"select\", 3, \"disabled\", \"valueChange\"], [\"value\", \"Gradient Boosting\"], [\"value\", \"XGB\"], [\"value\", \"Lasso\"], [\"value\", \"Ridge\"], [\"value\", \"SGDRegressor\"], [\"value\", \"MLP\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [4, \"ngIf\"], [\"class\", \"\", 4, \"ngIf\"], [1, \"mt-5\"], [1, \"row\", \"row-cols-3\", \"row-cols-md-4\", \"g-4\"], [\"class\", \"col\", 4, \"ngFor\", \"ngForOf\"], [1, \"col\"], [1, \"btn\", \"btn-light\", \"float-end\", 3, \"href\", \"download\"], [\"aria-hidden\", \"false\", \"aria-label\", \"\", \"fontIcon\", \"file_download\"], [\"draggable\", \"false\", 1, \"card-img-bottom\", \"imagen-hover\", 3, \"src\", \"alt\", \"click\"], [1, \"\"], [1, \"center-container\"], [\"diameter\", \"48\", \"color\", \"accent\"]],\n    template: function GraphsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\")(1, \"mat-card-header\")(2, \"mat-card-title\")(3, \"h1\");\n        i0.ɵɵtext(4, \"Gr\\u00E1ficos a partir de archivos CSV\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(5, \"mat-card-content\")(6, \"div\", 0)(7, \"input\", 1);\n        i0.ɵɵlistener(\"change\", function GraphsComponent_Template_input_change_7_listener($event) {\n          return ctx.getData($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 0)(9, \"div\")(10, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function GraphsComponent_Template_button_click_10_listener() {\n          return ctx.visualizarAtributos();\n        });\n        i0.ɵɵtext(11, \"Visualizar atributos (20s)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function GraphsComponent_Template_button_click_12_listener() {\n          return ctx.analisisDeInformacion();\n        });\n        i0.ɵɵtext(13, \"An\\u00E1lisis de Informaci\\u00F3n (2m)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"mat-form-field\", 3)(15, \"mat-select\", 4);\n        i0.ɵɵlistener(\"valueChange\", function GraphsComponent_Template_mat_select_valueChange_15_listener($event) {\n          return ctx.changeSelect($event);\n        });\n        i0.ɵɵelementStart(16, \"mat-option\", 5);\n        i0.ɵɵtext(17, \"Gradient Boosting\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"mat-option\", 6);\n        i0.ɵɵtext(19, \"XGB\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"mat-option\", 7);\n        i0.ɵɵtext(21, \"Lasso\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"mat-option\", 8);\n        i0.ɵɵtext(23, \"Ridge\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"mat-option\", 9);\n        i0.ɵɵtext(25, \"SGDRegressor\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"mat-option\", 10);\n        i0.ɵɵtext(27, \"MLP (2m)\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(28, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function GraphsComponent_Template_button_click_28_listener() {\n          return ctx.machineLearning();\n        });\n        i0.ɵɵtext(29, \"Machine Learning\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵtemplate(30, GraphsComponent_mat_card_content_30_Template, 5, 1, \"mat-card-content\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(31, GraphsComponent_mat_card_31_Template, 3, 0, \"mat-card\", 13);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"disabled\", ctx.disableSelect.value);\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      }\n    },\n    styles: [\"@charset \\\"UTF-8\\\";\\n\\n\\n.imagen-hover[_ngcontent-%COMP%] {\\n  cursor: pointer;\\n  max-width: 100%;\\n  \\n\\n  height: auto;\\n  \\n\\n  transition: transform 0.75s;\\n  \\n\\n}\\n\\n\\n\\n.imagen-hover[_ngcontent-%COMP%]:hover {\\n  opacity: 0.5;\\n  transition: opacity 0.5s;\\n  transform: scale(1.05);\\n}\\n\\n.center-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center; \\n\\n  align-items: center; \\n\\n  height: 100%; \\n\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9ncmFwaHMvZ3JhcGhzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGdCQUFnQjtBQUFoQixxQ0FBQTtBQUNBO0VBQ0ksZUFBQTtFQUNBLGVBQUE7RUFDQSw4REFBQTtFQUNBLFlBQUE7RUFDQSwyQ0FBQTtFQUNBLDJCQUFBO0VBQ0EscURBQUE7QUFFSjs7QUFFQSx3REFBQTtBQUNBO0VBQ0ksWUFBQTtFQUNBLHdCQUFBO0VBQ0Esc0JBQUE7QUFDSjs7QUFDQTtFQUNJLGFBQUE7RUFDQSx1QkFBQSxFQUFBLDJCQUFBO0VBQ0EsbUJBQUEsRUFBQSx5QkFBQTtFQUNBLFlBQUEsRUFBQSw2REFBQTtBQUVKIiwic291cmNlc0NvbnRlbnQiOlsiLyogRXN0YWJsZWNlIGVsIGVzdGlsbyBkZSBsYSBpbWFnZW4gKi9cbi5pbWFnZW4taG92ZXIge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgLyogQWp1c3RhIGVsIGFuY2hvIG3Dg8KheGltbyBkZSBsYSBpbWFnZW4gc2Vnw4PCum4gdHVzIG5lY2VzaWRhZGVzICovXG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIC8qIFBhcmEgbWFudGVuZXIgbGEgcHJvcG9yY2nDg8KzbiBkZSBhc3BlY3RvICovXG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuNzVzO1xuICAgIC8qIEFncmVnYSB1bmEgdHJhbnNpY2nDg8KzbiBzdWF2ZSBwYXJhIGVsIGVmZWN0byBob3ZlciAqL1xuXG59XG5cbi8qIEVzdGFibGVjZSBlbCBlc3RpbG8gZGVsIFNWRyB5IG9jw4PCumx0YWxvIGluaWNpYWxtZW50ZSAqL1xuLmltYWdlbi1ob3Zlcjpob3ZlciB7XG4gICAgb3BhY2l0eTogMC41O1xuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC41cztcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMDUpO1xufVxuLmNlbnRlci1jb250YWluZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IC8qIENlbnRyYSBob3Jpem9udGFsbWVudGUgKi9cbiAgICBhbGlnbi1pdGVtczogY2VudGVyOyAvKiBDZW50cmEgdmVydGljYWxtZW50ZSAqL1xuICAgIGhlaWdodDogMTAwJTsgLyogQWp1c3RhIGVsIGFsdG8gZGVsIGNvbnRlbmVkb3IgcGFyYSBjZW50cmFyIHZlcnRpY2FsbWVudGUgKi9cbiAgfVxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["Swal","FormControl","MatDialogConfig","DialogContentComponent","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","GraphsComponent_mat_card_content_30_div_4_Template_img_click_9_listener","restoredCtx","ɵɵrestoreView","_r6","grafico_r3","$implicit","ctx_r5","ɵɵnextContext","ɵɵresetView","openImageDialog","ɵɵadvance","ɵɵtextInterpolate1","i_r4","ɵɵpropertyInterpolate1","ɵɵproperty","ɵɵsanitizeUrl","ɵɵtemplate","GraphsComponent_mat_card_content_30_div_4_Template","ctx_r0","graficos","GraphsComponent","ngOnInit","constructor","http","dialog","loading","archivosSeleccionados","disableSelect","getData","event","archivos","target","files","imageSrc","imagenSeleccionada","dialogConfig","data","height","open","visualizarAtributos","length","formData","FormData","i","append","post","subscribe","response","fire","position","icon","title","showConfirmButton","timer","backdrop","analisisDeInformacion","machineLearning","algorithmValue","changeSelect","_","ɵɵdirectiveInject","i1","HttpClient","i2","MatDialog","_2","selectors","viewQuery","GraphsComponent_Query","rf","ctx","GraphsComponent_Template_input_change_7_listener","$event","GraphsComponent_Template_button_click_10_listener","GraphsComponent_Template_button_click_12_listener","GraphsComponent_Template_mat_select_valueChange_15_listener","GraphsComponent_Template_button_click_28_listener","GraphsComponent_mat_card_content_30_Template","GraphsComponent_mat_card_31_Template","value"],"sources":["C:\\Users\\ivan2\\OneDrive\\Escritorio\\cultivos_github\\agraria_ivan\\AgrarIA-Front\\src\\app\\components\\graphs\\graphs.component.ts","C:\\Users\\ivan2\\OneDrive\\Escritorio\\cultivos_github\\agraria_ivan\\AgrarIA-Front\\src\\app\\components\\graphs\\graphs.component.html"],"sourcesContent":["import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport Swal from 'sweetalert2';\nimport { FormControl } from '@angular/forms';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { DialogContentComponent } from '../shared/dialog-content/dialog-content.component';\n\n@Component({\n  selector: 'app-graphs',\n  templateUrl: './graphs.component.html',\n  styleUrls: ['./graphs.component.scss']\n})\nexport class GraphsComponent implements OnInit {\n  @ViewChild('archivoInput') archivoInput!: ElementRef; // Referencia al input de archivos\n  @ViewChild('spinner') spinner!: ElementRef; // Referencia al spinner\n  @ViewChild('subiryprocesarButton') subiryprocesarButton!: ElementRef; // Referencia al botón \"Subir y procesar\"\n  ngOnInit(): void {\n  }\n  loading = false;\n  graficos: any; // Aquí almacenaremos los gráficos obtenidos\n  archivosSeleccionados: boolean = false;\n  archivos: any;\n  disableSelect = new FormControl(false);\n\n  constructor(private http: HttpClient, public dialog: MatDialog) { }\n\n  getData(event: any) {\n    this.archivos = event.target.files\n  }\n\n  openImageDialog(imageSrc: any) {\n    const imagenSeleccionada = imageSrc;\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = { imageSrc: imagenSeleccionada };\n    dialogConfig.height = '80%';\n    this.dialog.open(DialogContentComponent, dialogConfig);\n  }\n  visualizarAtributos() {\n    this.loading = true\n\n    if (this.archivos.length === 0) {\n      this.archivosSeleccionados = false; // No se han seleccionado archivos\n      return;\n    }\n\n    this.archivosSeleccionados = true; // Se han seleccionado archivos\n\n    const formData = new FormData();\n    for (let i = 0; i < this.archivos.length; i++) {\n      formData.append('archivo', this.archivos[i]);\n    }\n\n    this.http.post<any>('http://127.0.0.1:5000/visualizar_atributos', formData).subscribe((response) => {\n      this.graficos = response;\n      this.loading = false;\n      Swal.fire({\n        position: 'top-end',\n        icon: 'success',\n        title: 'Se han generado los gráficos',\n        showConfirmButton: false,\n        timer: 2000,\n        backdrop: false\n      })\n    });\n  }\n\n  analisisDeInformacion() {\n    this.loading = true\n    if (this.archivos.length === 0) {\n      this.archivosSeleccionados = false; // No se han seleccionado archivos\n      return;\n    }\n\n    this.archivosSeleccionados = true; // Se han seleccionado archivos\n\n    const formData = new FormData();\n    for (let i = 0; i < this.archivos.length; i++) {\n      formData.append('archivo', this.archivos[i]);\n    }\n\n    this.http.post<any>('http://127.0.0.1:5000/analisis_informacion', formData).subscribe((response) => {\n      this.graficos = response;\n      this.loading = false;\n      Swal.fire({\n        position: 'top-end',\n        icon: 'success',\n        title: 'Se han generado los gráficos',\n        showConfirmButton: false,\n        timer: 2000,\n        backdrop: false\n      })\n    });\n  }\n  algorithmValue: any;\n  machineLearning() {\n    this.loading = true\n    if (this.archivos.length === 0) {\n      this.archivosSeleccionados = false; // No se han seleccionado archivos\n      return;\n    }\n\n    this.archivosSeleccionados = true; // Se han seleccionado archivos\n\n    const formData = new FormData();\n    for (let i = 0; i < this.archivos.length; i++) {\n      formData.append('archivo', this.archivos[i]);\n    }\n    // Agrega el valor seleccionado en el 'select' al FormData\n\n\n    formData.append('algoritmo', this.algorithmValue);\n\n    this.http.post<any>('http://127.0.0.1:5000/machine_learning', formData).subscribe((response) => {\n      this.graficos = response;\n      this.loading = false;\n      Swal.fire({\n        position: 'top-end',\n        icon: 'success',\n        title: 'Se han generado los gráficos',\n        showConfirmButton: false,\n        timer: 2000,\n        backdrop: false,\n      })\n    });\n  }\n  changeSelect(event: any) {\n    this.algorithmValue = event;\n\n  }\n\n}\n","<mat-card>\n    <mat-card-header>\n        <mat-card-title>\n            <h1>Gráficos a partir de archivos CSV</h1>\n        </mat-card-title>\n    </mat-card-header>\n\n    <mat-card-content>\n        <div class=\"mb-3\">\n            <input class=\"form-control\" type=\"file\" name=\"archivo\" id=\"archivo\" multiple (change)=\"getData($event)\">\n        </div>\n\n        <div class=\"mb-3\">\n            <div>\n                <button mat-raised-button color=\"primary\" class=\"me-4\" (click)=\"visualizarAtributos()\">Visualizar\n                    atributos\n                    (20s)</button>\n                <button mat-raised-button color=\"primary\" class=\"me-4\" (click)=\"analisisDeInformacion()\">Análisis de\n                    Información\n                    (2m)</button>\n                <mat-form-field class=\"me-2\">\n                    <mat-select [disabled]=\"disableSelect.value\" placeholder=\"--Algoritmo--\" id=\"select\"\n                        (valueChange)=\"changeSelect($event)\">\n                        <mat-option value=\"Gradient Boosting\">Gradient Boosting</mat-option>\n                        <mat-option value=\"XGB\">XGB</mat-option>\n                        <mat-option value=\"Lasso\">Lasso</mat-option>\n                        <mat-option value=\"Ridge\">Ridge</mat-option>\n                        <mat-option value=\"SGDRegressor\">SGDRegressor</mat-option>\n                        <mat-option value=\"MLP\">MLP (2m)</mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <button mat-raised-button color=\"primary\" (click)=\"machineLearning()\">Machine Learning</button>\n            </div>\n        </div>\n    </mat-card-content>\n\n    <mat-card-content *ngIf=\"!loading\">\n        <h4 class=\"mt-5\">Gráficos generados:</h4>\n        <div class=\"row row-cols-3 row-cols-md-4 g-4\">\n            <div *ngFor=\"let grafico of graficos; let i = index\" class=\"col\">\n                <mat-card>\n                    <mat-expansion-panel>\n                        <mat-expansion-panel-header>\n                            <mat-panel-title>\n                                Gráfico {{ i + 1 }}\n                            </mat-panel-title>\n                            <mat-panel-description>\n\n                            </mat-panel-description>\n                        </mat-expansion-panel-header>\n                        <a [href]=\"'data:image/png;base64,' + grafico\" download=\"grafico{{ i }}.png\"\n                            class=\"btn btn-light float-end\">\n                            <mat-icon aria-hidden=\"false\" aria-label=\"\" fontIcon=\"file_download\"></mat-icon>\n                        </a>\n                        <img [src]=\"'data:image/png;base64,' + grafico\"\n                            (click)=\"openImageDialog('data:image/png;base64,' + grafico)\" draggable=\"false\"\n                            class=\"card-img-bottom imagen-hover\" [alt]=\"'Gráfico ' + (i + 1)\">\n                    </mat-expansion-panel>\n                </mat-card>\n            </div>\n        </div>\n    </mat-card-content>\n</mat-card>\n\n<mat-card *ngIf=\"loading\" class=\"\">\n    <div class=\"center-container\"> <!-- Crear un contenedor de centrado -->\n        <mat-spinner diameter=\"48\" color=\"accent\"></mat-spinner>\n    </div>\n</mat-card>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}